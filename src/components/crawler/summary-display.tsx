
"use client";

import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { Loader2, AlertCircle, FileText } from "lucide-react";

interface SummaryDisplayProps {
  summary: string | null;
  isLoading: boolean;
  error: string | null;
}

export function SummaryDisplay({ summary, isLoading, error }: SummaryDisplayProps) {
  const renderContent = () => {
    if (isLoading) {
      return (
        <div className="flex flex-col items-center justify-center h-36">
          <Loader2 className="h-10 w-10 animate-spin text-primary mb-3" />
          <p className="text-muted-foreground">Generating summary...</p>
        </div>
      );
    }

    if (error) {
      return (
        <Alert variant="destructive">
          <AlertCircle className="h-4 w-4" />
          <AlertTitle>Summarization Error</AlertTitle>
          <AlertDescription>{error}</AlertDescription>
        </Alert>
      );
    }

    if (summary) {
      return (
        <ScrollArea className="h-60 w-full rounded-md border p-4 bg-muted/20">
          <p className="text-sm whitespace-pre-wrap break-words">{summary}</p>
        </ScrollArea>
      );
    }

    return (
      <div className="text-center text-muted-foreground py-6">
        <FileText className="h-8 w-8 mx-auto mb-2 text-muted-foreground/70" />
        <p>Summary will appear here once data is extracted.</p>
      </div>
    );
  };

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle>AI Summary</CardTitle>
        <CardDescription>
          A concise summary of the extracted content, generated by AI.
        </CardDescription>
      </CardHeader>
      <CardContent>
        {renderContent()}
      </CardContent>
    </Card>
  );
}
